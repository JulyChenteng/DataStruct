/**********************************************************************
	汉诺塔问题：设有3根标号为A、B、C的柱子，在A柱上放着n个盘子，每个上面
的盘子都比下面的盘子略小一点，要求把A柱上的盘子全部移到C柱上。移动规则：
	a. 一次移动一个盘子；
	b. 移动过程中的盘子不能放在小盘子上边；
	c. 移动过程中，盘子可以放在标号为A、B、C的任意一根柱子上。

	
	思路解析：n个盘子的汉诺塔问题可以递归表示为，先把上面的n-1个盘子从
A移动到B上，然后把最下面的一个盘子从A柱移到C柱上，最后把B上的n-1个盘子
移到C上。
**********************************************************************/
# include <stdio.h>

int count = 0;    //要想同通过计数器计算总步骤数，则必须将计数器设为全局变量

void  move(int n, char x, char y, char z)
//n为盘子的个数,x，y，z代表三个柱子
{
	if (n == 1)
	{
		printf("%c->%c\n", x, z);
		count++;
	}
	else
	{
		move(n-1, x, z, y);      //将n-1个盘子，借助 z 从 x 移动到 y 上
		printf("%c->%c\n", x, z);	 //将第n个盘子从 x 移动到 z 上
		count++;
		move(n-1, y, x, z);		 //将n-1个盘子，借助 x 从 y 移动到z上		
	}
}

int main()
{
	int n;

	printf("请输入汉诺塔的层数：");
	scanf("%d", &n);

	printf("\n\n移动步骤如下:\n");
	move(n, 'A', 'B', 'C');
	printf("总步骤： %d\n\n", count);

	return 0;
}